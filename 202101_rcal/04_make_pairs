#!/usr/bin/python3

# Make calibration pairs: R1-R2 from slow data and triton data
# data1 -> 

import numpy
import matplotlib.pyplot as plt
import scipy.optimize
import os

os.makedirs('data_pairs', exist_ok=True)

R1 = numpy.loadtxt("data1/R1_slow.dat", unpack=True, usecols=(0,1));
R2 = numpy.loadtxt("data1/R2_slow.dat", unpack=True, usecols=(0,1));
R3 = numpy.loadtxt("data1/R3_slow.dat", unpack=True, usecols=(0,1));
R4 = numpy.loadtxt("data1/R4_slow.dat", unpack=True, usecols=(0,1));
R5 = numpy.loadtxt("data1/R5_slow.dat", unpack=True, usecols=(0,1));
R6 = numpy.loadtxt("data1/R6_slow.dat", unpack=True, usecols=(0,1));
TC = numpy.loadtxt("data1/T_Cernox.dat", unpack=True, usecols=(0,1));
TR = numpy.loadtxt("data1/T_RuOx.dat",   unpack=True, usecols=(0,1));

def mk_pair(name, v1,v2):
  v2a=numpy.interp(v1[0],v2[0],v2[1])
  numpy.savetxt('data_pairs/' + name + '.dat', numpy.column_stack((v1[0],v1[1],v2a)),
      header = "time -- v1 -- v2",
      fmt='%.3f %f %f')

mk_pair("R1-R2", R1, R2)
mk_pair("R1-R3", R1, R3)
mk_pair("R1-R4", R1, R4)

mk_pair("R2-R1", R2, R1)
mk_pair("R2-R3", R2, R3)
mk_pair("R2-R4", R2, R4)

mk_pair("TC-R1", TC, R1)
mk_pair("TC-R2", TC, R2)
mk_pair("TC-R3", TC, R3)
mk_pair("TC-R4", TC, R4)
mk_pair("TC-R5", TC, R5)
mk_pair("TC-R6", TC, R6)

mk_pair("TR-R1", TR, R1)
mk_pair("TR-R2", TR, R2)
mk_pair("TR-R3", TR, R3)
mk_pair("TR-R4", TR, R4)
mk_pair("TR-R5", TR, R5)
mk_pair("TR-R6", TR, R6)
